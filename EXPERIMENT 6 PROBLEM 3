import java.util.*;
import java.util.stream.Collectors;

class Product {
    private String name;
    private String category;
    private double price;

    public Product(String name, String category, double price) {
        this.name = name;
        this.category = category;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public String getCategory() {
        return category;
    }

    public double getPrice() {
        return price;
    }

    @Override
    public String toString() {
        return String.format("Product{name='%s', category='%s', price=%.2f}", name, category, price);
    }
}

public class Main {
    public static void main(String[] args) {
        // Create a list of products
        List<Product> products = Arrays.asList(
            new Product("Laptop", "Electronics", 1200.00),
            new Product("Smartphone", "Electronics", 800.00),
            new Product("Tablet", "Electronics", 300.00),
            new Product("Chair", "Furniture", 150.00),
            new Product("Table", "Furniture", 250.00),
            new Product("Sofa", "Furniture", 700.00),
            new Product("Shirt", "Clothing", 50.00),
            new Product("Jeans", "Clothing", 80.00),
            new Product("Jacket", "Clothing", 120.00)
        );

        Map<String, List<Product>> productsByCategory = products.stream()
            .collect(Collectors.groupingBy(Product::getCategory));

        Map<String, Product> mostExpensiveProducts = productsByCategory.entrySet().stream()
            .collect(Collectors.toMap(
                Map.Entry::getKey,
                entry -> entry.getValue().stream()
                    .max(Comparator.comparingDouble(Product::getPrice))
                    .orElse(null)
            ));

        double averagePrice = products.stream()
            .collect(Collectors.averagingDouble(Product::getPrice));

        System.out.println("Most Expensive Products by Category:");
        mostExpensiveProducts.forEach((category, product) -> {
            System.out.println(category + ": " + product);
        });

        System.out.printf("Average Price of All Products: %.2f%n", averagePrice);
    }
}
